# Generated by Django 3.0.4 on 2020-03-26 10:10

import account.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Offices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Set office name', max_length=32, verbose_name='Office Name')),
                ('short_code', models.CharField(help_text='Set Short code for current office', max_length=5, verbose_name='Short Code')),
                ('address', models.TextField(blank=True, verbose_name='Place Affress Ofice')),
                ('twoGisCode', models.TextField(blank=True, help_text='Set 2gis code for curent place', verbose_name='2gis site code')),
                ('phone', models.CharField(blank=True, max_length=12, unique=True, validators=[account.models.validate_phone], verbose_name='Phone Number')),
                ('work_time_start', models.TimeField(default=django.utils.timezone.now, verbose_name='Work Time Start')),
                ('work_time_end', models.TimeField(default=django.utils.timezone.now, verbose_name='Work Time End')),
                ('return_time_start', models.TimeField(blank=True, default=django.utils.timezone.now, verbose_name='Start Time Return')),
                ('view_on_front', models.BooleanField(default=False, verbose_name='view on frontend')),
            ],
            options={
                'verbose_name': 'Ofice',
                'verbose_name_plural': 'Ofices',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('middle_name', models.CharField(blank=True, max_length=32, verbose_name='Middle name')),
                ('phone', models.CharField(max_length=12, unique=True, validators=[account.models.validate_phone], verbose_name='Phone Number')),
                ('address', models.CharField(blank=True, max_length=64, verbose_name='Address')),
                ('position', models.IntegerField(choices=[(1, 'administrator'), (2, 'master'), (3, 'manager')], default=2, verbose_name='Position in company')),
                ('birth_to_day', models.DateField(blank=True, null=True, verbose_name='User BirthDay')),
                ('avatar', models.ImageField(default='../static/images/avatar/women.jpg', upload_to='users/', verbose_name='Photo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ('last_name',),
            },
        ),
        migrations.CreateModel(
            name='WorkStation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(max_length=64, verbose_name='host name')),
                ('ip_address', models.CharField(max_length=16, verbose_name='ip_address')),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Offices')),
            ],
            options={
                'verbose_name': 'Work Station',
                'verbose_name_plural': 'Work Stations',
                'unique_together': {('host', 'ip_address')},
            },
        ),
    ]
